15%/%4
f = function(a,b,c){
if(a>c & b >c){
cat('no solutions \n')
return()
}
for(apples in 0:(c%/%a))
for(pears in 0:((c-apples*a)%/%pear))
if(apples*a+pears*b == c){
cat(apples,' apples, ',pears,' pears\n')
}
}
f(1,1,0)
f(1,2,3)
f = function(a,b,c){
if(a>c & b >c){
cat('no solutions \n')
return()
}
for(apples in 0:(c%/%a))
for(pears in 0:((c-apples*a)%/%pears))
if(apples*a+pears*b == c){
cat(apples,' apples, ',pears,' pears\n')
}
}
f(1,2,3)
f = function(a,b,c){
if(a>c & b >c){
cat('no solutions \n')
return()
}
for(apples in 0:(c%/%a))
for(pears in 0:((c-apples*a)%/%b))
if(apples*a+pears*b == c){
cat(apples,' apples, ',pears,' pears\n')
}
}
f(1,2,3)
f(1,2,3.5)
f(10,10,30)
f(1.5,2.5,6.5)
library(dplyr)
library(readxl)
library(dplyr)
data = read_excel('data.xlsx')
data
date()
data2 = data %>% filter(Date>as.Date('2016-03-1'))
data2 = data %>% filter(Date>as.Date('2016-03-01'))
data = read_excel('data.xlsx') %>% mutate(Data = as.POSIXct.Date(Date))
data
data2 = data %>% filter(Date>as.POSIXct.Date('2016-03-01'))
data = read_excel('data.xlsx') %>% mutate(Data = as.Date(Date))
data
data = read_excel('data.xlsx') %>% mutate(Date = as.Date(Date))
data2 = data %>% filter(Date > as.Date('2016-03-01'))
data2 = data %>% filter(Date >= as.Date('2016-03-01') & Date < as.Date('2018-11-26'))
library(corrplot)
corrplot(cor(date[,-1]))
date2[,-1]
data2 = data %>% filter(Date >= as.Date('2016-03-01') & Date < as.Date('2018-11-26'))
corrplot(cor(data2[,-1]))
corrplot(cor(data2[,-1]), method ='number')
library(ggplot2)
ggplot(data2,aes(x=Date))+theme_bw()+
geom_line(aes(y=TS1))
ggplot(data2,aes(x=Date))+theme_bw()+
geom_line(aes(y=TS1))+
geom_line(aes(y=TS2))+
geom_line(aes(y=TS3))+
geom_line(aes(y=TS4))+
geom_line(aes(y=TS5))
ggplot(tibble(Dates=rep(data2$Date,5),
TSs=c(data2$TS1,data2$TS2,data2$TS3,data2$TS4,data2$TS5),
Number = sort(rep(1:5,nrow(data2)))),
aes(x=Date))+theme_bw()+
geom_line(aes(y=TSs))
ggplot(tibble(Date=rep(data2$Date,5),
TSs=c(data2$TS1,data2$TS2,data2$TS3,data2$TS4,data2$TS5),
Number = sort(rep(1:5,nrow(data2)))),
aes(x=Date,y=TSs,col = factor(Number)))+theme_bw()+
geom_line()
corrplot(cor(data2[,-1]), method ='number')
regress = function(y,x){
fit = lm(x,y)
print(summary(fit))
}
regress(data2$TS1, data2[,-c(1,2)])
lm(data2[,-c(1,2)],data2$TS1)
data2[,-c(1,2)]
regress = function(y,x){
fit = lm(y~x)
print(summary(fit))
}
regress(data2$TS1, data2[,-c(1,2)])
regress = function(y,x){
fit = lm(y~x[1]+x[2]+x[3]+x[4])
print(summary(fit))
}
regress(data2$TS1, data2[,-c(1,2)])
lm(data2$TS1~data2$TS2)
lm(data2$TS1~data2$TS2+data2$TS3)
lm(data2$TS1~data2[,3])
lm(data2$TS1~data2[3])
data[,2]
data$TS1
lm(data2$TS1~data2[[1]])
regress = function(y,x){
fit = lm(y~x[[1]]+x[[2]]+x[[3]]+x[[4]])
print(summary(fit))
}
regress(data2$TS1, data2[,-c(1,2)])
for(regressant in 1:5){
cat('regressant = ', colnames(data2)[1+regressant],'\n')
}
regress = function(y,x){
fit = lm(y~x[[1]]+x[[2]]+x[[3]]+x[[4]])
print(summary(fit))
}
for(regressant in 1:5){
cat('regressant = ', colnames(data2)[1+regressant],'\n')
regress(data2[[1+regressant]], data2[,-c(1,regressant)])
}
regress = function(y,x){
fit = lm(y~x[[1]]+x[[2]]+x[[3]]+x[[4]]-1)
print(summary(fit))
}
for(regressant in 1:5){
cat('regressant = ', colnames(data2)[1+regressant],'\n')
regress(data2[[1+regressant]], data2[,-c(1,regressant)])
}
corrplot(cor(data2[,-1]), method ='number')
data = read_excel('data.xlsx',sheet = 2)
data
loss =function(pred,expect){
tmp = -expect*log(pred)-(1-expect)*log(1-pred)
return(mean(tmp))
}
w1=0
w2=0
for(iter in 1:10){
z = w1 * data$X1 + w2* data$X2
s = 1/(1+exp(-z))
cat('iter = ',iter,' loss = ',loss(s,data$Label),'\n')
}
w1=0
w2=0
for(iter in 1:10){
z = w1 * data$X1 + w2* data$X2
s = 1/(1+exp(-z))
cat('iter = ',iter,' loss = ',loss(s,data$Label),'\n')
w1 = w1 + mean(data$X1*z*(data$Label*exp(-z)+data$Label-1))
w2 = w2 + mean(data$X2*z*(data$Label*exp(-z)+data$Label-1))
}
View(f)
w1=0
w2=0
for(iter in 1:10){
z = w1 * data$X1 + w2* data$X2
s = 1/(1+exp(-z))
cat('iter = ',iter,' loss = ',loss(s,data$Label),'\n')
w1 = w1 + mean(data$X1*s*(data$Label*exp(-z)+data$Label-1))
w2 = w2 + mean(data$X2*s*(data$Label*exp(-z)+data$Label-1))
}
w1=0
w2=0
for(iter in 1:100){
z = w1 * data$X1 + w2* data$X2
s = 1/(1+exp(-z))
cat('iter = ',iter,' loss = ',loss(s,data$Label),'\n')
w1 = w1 + mean(data$X1*s*(data$Label*exp(-z)+data$Label-1))
w2 = w2 + mean(data$X2*s*(data$Label*exp(-z)+data$Label-1))
}
w1=0
w2=0
for(iter in 1:10){
z = w1 * data$X1 + w2* data$X2
s = 1/(1+exp(-z))
cat('iter = ',iter,' loss = ',loss(s,data$Label),'\n')
w1 = w1 + mean(data$X1*s*(data$Label*exp(-z)+data$Label-1))
w2 = w2 + mean(data$X2*s*(data$Label*exp(-z)+data$Label-1))
}
cat('end loss = ',loss(s,data$Label),'\n')
z = w1 * data$X1 + w2* data$X2
s = 1/(1+exp(-z))
cat('end loss = ',loss(s,data$Label),'\n')
regress = function(y,x){
fit = lm(y~x[[1]]+x[[2]]+x[[3]]+x[[4]]-1)
print(summary(fit))
}
for(regressant in 1:5){
cat('---------- regressant = ', colnames(data2)[1+regressant],'\n')
cat('---------- regressors = ', colnames(data2)[-1-regressant],'\n')
regress(data2[[1+regressant]], data2[,-c(1,regressant)])
cat('\n')
}
summary(data2)
psych::describe(data2)
summary(lm(TS5~TS1+TS2+TS3+TS4-1,data2))
summary(lm(TS4~TS1+TS2+TS3+TS5-1,data2))
summary(lm(TS3~TS1+TS2+TS5+TS4-1,data2))
summary(lm(TS2~TS1+TS5+TS3+TS4-1,data2))
summary(lm(TS1~TS5+TS2+TS3+TS4-1,data2))
fit = lm(TS3~TS1+TS2+TS5+TS4-1,data2)
shapiro.test(fit$residuals)
hist(fit$residuals)
fit = lm(TS1~TS5+TS2+TS3+TS4-1,data2)
shapiro.test(fit$residuals)
fit = lm(TS2~TS1+TS5+TS3+TS4-1,data2)
shapiro.test(fit$residuals)
fit = lm(TS4~TS1+TS2+TS3+TS5-1,data2)
shapiro.test(fit$residuals)
fit = lm(TS5~TS1+TS2+TS3+TS4-1,data2)
shapiro.test(fit$residuals)
fit = lm(TS2~TS1+TS3+TS5+TS4-1,data2)
shapiro.test(fit$residuals)
gvlma::gvlma(fit) %>% summary() %>% print();cat("\n")
mysummary=function(mdl){
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n");cat("\n")
gvlma::gvlma(mdl) %>% summary() %>% print();cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n");cat("\n")
par(mfrow=c(2,2))
plot(mdl)
par(mfrow=c(1,1)) ;cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n");cat("\n")
shapiro.test(mdl$residuals) %>% print();cat("\n")
qqPlot(mdl,main="Q-Q plot")
cat("-----> ФАКТОР ИНФЛЯЦИИ ДИСПЕРСИЙ:\n");cat("\n")
vif(mdl)%>% print();cat("\n")
cat("-----> ТЕСТ НА АВТОКОРРЕЛЯЦИЮ:\n");cat("\n")
durbinWatsonTest(mdl) %>% print();cat("\n")   #тест на автокорреляцию
# cat("-----> ТЕСТ НА ОДНОРОДНОСТЬ ДИСПЕРСИИ:\n");cat("\n")
# ncvTest(mdl)%>% print();cat("\n")    #однородность дисперсии
cat("-----> ТЕСТ НА ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n");cat("\n")
outs=outlierTest(mdl)
outs%>% print()
influ=influencePlot(mdl,main="Диаграмма влияния",sub="Размеры кругов пропорциональны расстояниям Кука")
gb=capture.output(influ %>% print())
cat("-----> ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
data[c(outs$p %>% names(),influ %>% rownames()) %>% as.numeric(),] %>% unique() %>%
select(-Mail,-Action2,-Body2,-AgeGroup,-CountGroup,-Index) %>% arrange(-RM,-Count) %>% kable() %>% print();cat("\n")
}
mysummary(fit)
mysummary=function(mdl){
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n");cat("\n")
gvlma::gvlma(mdl) %>% summary() %>% print();cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n");cat("\n")
par(mfrow=c(2,2))
plot(mdl)
par(mfrow=c(1,1)) ;cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n");cat("\n")
shapiro.test(mdl$residuals) %>% print();cat("\n")
cat("-----> ФАКТОР ИНФЛЯЦИИ ДИСПЕРСИЙ:\n");cat("\n")
vif(mdl)%>% print();cat("\n")
cat("-----> ТЕСТ НА АВТОКОРРЕЛЯЦИЮ:\n");cat("\n")
durbinWatsonTest(mdl) %>% print();cat("\n")   #тест на автокорреляцию
# cat("-----> ТЕСТ НА ОДНОРОДНОСТЬ ДИСПЕРСИИ:\n");cat("\n")
# ncvTest(mdl)%>% print();cat("\n")    #однородность дисперсии
cat("-----> ТЕСТ НА ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n");cat("\n")
outs=outlierTest(mdl)
outs%>% print()
influ=influencePlot(mdl,main="Диаграмма влияния",sub="Размеры кругов пропорциональны расстояниям Кука")
gb=capture.output(influ %>% print())
cat("-----> ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
data[c(outs$p %>% names(),influ %>% rownames()) %>% as.numeric(),] %>% unique() %>%
select(-Mail,-Action2,-Body2,-AgeGroup,-CountGroup,-Index) %>% arrange(-RM,-Count) %>% kable() %>% print();cat("\n")
}
mysummary(fit)
library(car)
mysummary=function(mdl){
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n");cat("\n")
gvlma::gvlma(mdl) %>% summary() %>% print();cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n");cat("\n")
par(mfrow=c(2,2))
plot(mdl)
par(mfrow=c(1,1)) ;cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n");cat("\n")
shapiro.test(mdl$residuals) %>% print();cat("\n")
cat("-----> ФАКТОР ИНФЛЯЦИИ ДИСПЕРСИЙ:\n");cat("\n")
vif(mdl)%>% print();cat("\n")
cat("-----> ТЕСТ НА АВТОКОРРЕЛЯЦИЮ:\n");cat("\n")
durbinWatsonTest(mdl) %>% print();cat("\n")   #тест на автокорреляцию
# cat("-----> ТЕСТ НА ОДНОРОДНОСТЬ ДИСПЕРСИИ:\n");cat("\n")
# ncvTest(mdl)%>% print();cat("\n")    #однородность дисперсии
cat("-----> ТЕСТ НА ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n");cat("\n")
outs=outlierTest(mdl)
outs%>% print()
influ=influencePlot(mdl,main="Диаграмма влияния",sub="Размеры кругов пропорциональны расстояниям Кука")
gb=capture.output(influ %>% print())
cat("-----> ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
data[c(outs$p %>% names(),influ %>% rownames()) %>% as.numeric(),] %>% unique() %>%
select(-Mail,-Action2,-Body2,-AgeGroup,-CountGroup,-Index) %>% arrange(-RM,-Count) %>% kable() %>% print();cat("\n")
}
mysummary(fit)
library(car)
mysummary=function(mdl){
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n");cat("\n")
gvlma::gvlma(mdl) %>% summary() %>% print();cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n");cat("\n")
par(mfrow=c(2,2))
plot(mdl)
par(mfrow=c(1,1)) ;cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n");cat("\n")
shapiro.test(mdl$residuals) %>% print();cat("\n")
cat("-----> ФАКТОР ИНФЛЯЦИИ ДИСПЕРСИЙ:\n");cat("\n")
vif(mdl)%>% print();cat("\n")
cat("-----> ТЕСТ НА АВТОКОРРЕЛЯЦИЮ:\n");cat("\n")
durbinWatsonTest(mdl) %>% print();cat("\n")   #тест на автокорреляцию
# cat("-----> ТЕСТ НА ОДНОРОДНОСТЬ ДИСПЕРСИИ:\n");cat("\n")
# ncvTest(mdl)%>% print();cat("\n")    #однородность дисперсии
cat("-----> ТЕСТ НА ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n");cat("\n")
outs=outlierTest(mdl)
outs%>% print()
influ=influencePlot(mdl,main="Диаграмма влияния",sub="Размеры кругов пропорциональны расстояниям Кука")
gb=capture.output(influ %>% print())
cat("-----> ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
data[c(outs$p %>% names(),influ %>% rownames()) %>% as.numeric(),] %>% unique() %>%
select(-Mail,-Action2,-Body2,-AgeGroup,-CountGroup,-Index) %>% arrange(-RM,-Count) %>%  print();cat("\n")
}
mysummary(fit)
library(car)
mysummary=function(mdl){
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n");cat("\n")
gvlma::gvlma(mdl) %>% summary() %>% print();cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n");cat("\n")
par(mfrow=c(2,2))
plot(mdl)
par(mfrow=c(1,1)) ;cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n");cat("\n")
shapiro.test(mdl$residuals) %>% print();cat("\n")
cat("-----> ФАКТОР ИНФЛЯЦИИ ДИСПЕРСИЙ:\n");cat("\n")
vif(mdl)%>% print();cat("\n")
cat("-----> ТЕСТ НА АВТОКОРРЕЛЯЦИЮ:\n");cat("\n")
durbinWatsonTest(mdl) %>% print();cat("\n")   #тест на автокорреляцию
# cat("-----> ТЕСТ НА ОДНОРОДНОСТЬ ДИСПЕРСИИ:\n");cat("\n")
# ncvTest(mdl)%>% print();cat("\n")    #однородность дисперсии
cat("-----> ТЕСТ НА ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n");cat("\n")
outs=outlierTest(mdl)
outs%>% print()
influ=influencePlot(mdl,main="Диаграмма влияния",sub="Размеры кругов пропорциональны расстояниям Кука")
gb=capture.output(influ %>% print())
}
mysummary(fit)
summary(step(fit))
nlme::Variogram(data2$TS1)
durbinWatsonTest(fit)
fit = lm(TS5~TS1+TS2+TS3+TS4-1,data2)
durbinWatsonTest(fit)
fit = lm(TS4~TS1+TS2+TS3+TS5-1,data2)
durbinWatsonTest(fit)
fit = lm(TS2~TS1+TS5+TS3+TS4-1,data2)
durbinWatsonTest(fit)
fit = lm(TS1~TS5+TS2+TS3+TS4-1,data2)
fit = lm(TS5~TS1+TS2+TS3+TS4-1,data2)
fit = lm(TS1~TS5+TS2+TS3+TS4-1,data2)
durbinWatsonTest(fit)
fit = lm(TS2~TS1+TS5+TS3+TS4-1,data2)
ggplot(
tibble(date = rep(data2$Date,2),
values = c(data2$TS2,fit$fitted.values),
type = sort(rep(1:2,nrow(data2))),
aes(x=data,y=values,col = factor(type)))+geom_line()+theme_bw()+theme(legend.position = c(0.1,0.9))+labs(col=c('1','2'))
)
tibble(date = rep(data2$Date,2),
values = c(data2$TS2 , fit$fitted.values),
type = sort(rep(1:2,nrow(data2)))
)
ggplot(
tibble(date = rep(data2$Date,2),
values = c(data2$TS2 , fit$fitted.values),
type = sort(rep(1:2,nrow(data2)))),
aes(x=data,y=values,col = factor(type)))+geom_line()+theme_bw()+theme(legend.position = c(0.1,0.9))+labs(col=c('1','2'))
)
sort(rep(1:2,nrow(data2)))
fit$fitted.values
ggplot(
tibble(date = rep(data2$Date,2),
values = c(data2$TS2 , predict(fit,data2)),
type = sort(rep(1:2,nrow(data2)))
),
aes(x=data,y=values,col = factor(type)))+geom_line()+
theme_bw()+theme(legend.position = c(0.1,0.9))+labs(col=c('1','2'))
ggplot(
data.frame(date = rep(data2$Date,2),
values = c(data2$TS2 , predict(fit,data2)),
type = sort(rep(1:2,nrow(data2)))
),
aes(x=data,y=values,col = factor(type)))+geom_line()+
theme_bw()+theme(legend.position = c(0.1,0.9))+labs(col=c('1','2'))
ggplot(
tibble(date = rep(data2$Date,2),
values = c(data2$TS2 , predict(fit,data2)),
type = sort(rep(1:2,nrow(data2)))
),
aes(x=date,y=values,col = factor(type)))+geom_line()+
theme_bw()+theme(legend.position = c(0.1,0.9))+labs(col=c('1','2'))
ggplot(
tibble(date = rep(data2$Date,2),
values = c(data2$TS2 , predict(fit,data2)),
type = sort(rep(1:2,nrow(data2)))
),
aes(x=date,y=values,col = factor(type)))+geom_line()+
theme_bw()+theme(legend.position = c(0.9,0.9))+labs(col=c('expected','predicted'))
ggplot(
tibble(date = rep(data2$Date,2),
values = c(data2$TS2 , predict(fit,data2)),
type = sort(rep(c('expected','predicted'),nrow(data2)))
),
aes(x=date,y=values,col = factor(type)))+geom_line()+
theme_bw()+theme(legend.position = c(0.9,0.1))
